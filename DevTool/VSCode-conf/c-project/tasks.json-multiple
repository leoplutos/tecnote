{
    //调用这个task相当于运行 gcc.exe -Wall -fdiagnostics-color=always -g -x c -fexec-charset=utf-8 'D:\Work\WorkSpace\C\VSCTest/*.c' 'D:\Work\WorkSpace\C\VSCTest/*.pc' -o 'D:\Work\WorkSpace\C\VSCTest\bin\Debug\main.exe'
    "version": "2.0.0",
    "tasks": [
        {
            "label": "gcc_build", // 任务的名字叫gcc_build，注意是大小写区分的，等会在launch中调用这个名字
            "type": "shell",
            "command": "echo gcc_build end",
            "dependsOrder": "sequence",
            "dependsOn": [
                "gcc_build_before",
                "gcc_build_main",
                "gcc_build_after"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
                // 任务分组，因为是tasks而不是task，意味着可以连着执行很多任务
                // 在build组的任务们，可以通过在Command Palette(F1) 输入run build task来运行
                // 当然，如果任务分组是test，你就可以用run test task来运行
            },
        },
        {
            "label": "gcc_build_before",
            "type": "shell",
            "command": "echo gcc_build_before run",
        },
        {
            "label": "gcc_build_main",
            "type": "shell",
            "command": "gcc.exe",
            "args": [
                "-Wall",
                "-fdiagnostics-color=always",
                "-g",
                "-x", //因为有扩展名为pc的文件，所以加上[ -x c ]指定c语言
                "c",
                "-fexec-charset=utf-8",
                "'${workspaceFolder}/*.c'",
                "'${workspaceFolder}/*.pc'",
                "-o",
                "'${workspaceFolder}\\bin\\Debug\\${fileBasenameNoExtension}.exe'"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
        },
        {
            "label": "gcc_build_after",
            "type": "shell",
            "command": "echo gcc_build_after run",
        },
    ]
}
