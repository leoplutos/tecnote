# OpenJDK 版本
# 根据需要选择不同版本的 OpenJDK 版
# JDK8(Alpine)
# FROM eclipse-temurin:8u412-b08-jdk-alpine
# JDK11(Ubuntu 22.04)
# FROM eclipse-temurin:11.0.23_9-jdk-jammy
# JDK17(Centos7)
# FROM eclipse-temurin:17.0.11_9-jdk-centos7
# JDK21(Alpine)
# FROM eclipse-temurin:21.0.3_9-jdk-alpine
# 这里使用基于alpine的jre环境
FROM eclipse-temurin:21.0.3_9-jre-alpine

# 设定alpine镜像仓库为国内源
RUN set -eux && sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories

# 创建应用路径
RUN mkdir /opt/app
# 添加bash，curl
RUN apk update --quiet
RUN apk add --no-cache --upgrade bash curl

# 将jar文件复制到镜像中
COPY target/*.jar /opt/app/SpringBootUndertow/SpringBootUndertow.jar

# 构建时变量，仅在构建Docker映像期间可用
# ARG NODE_ENV=production
# 在容器内部设置环境变量
ENV JAVA_TOOL_OPTIONS="-Duser.language=en -Dfile.encoding=UTF-8 -Dlog4j2.asyncQueueFullPolicy=Discard -Dlog4j2.discardThreshold=ERROR"

# 个人习惯定制化
RUN echo 'PS_GREEN="\[\033[0;32m\]"' >> /root/.bashrc
RUN echo 'PS_YELLOW="\[\033[0;33m\]"' >> /root/.bashrc
RUN echo 'PS_BLUE="\[\033[0;34m\]"' >> /root/.bashrc
RUN echo 'PS_MAGENTA="\[\033[0;35m\]"' >> /root/.bashrc
RUN echo 'PS_CLEAR="\[\033[0m\]"' >> /root/.bashrc
RUN echo 'export PS1="${PS_GREEN}[Container]${PS_MAGENTA}\u@\h${PS_CLEAR}:${PS_YELLOW}\w${PS_CLEAR}\n${PS_BLUE}\$ ${PS_CLEAR}"' >> /root/.bashrc
RUN echo 'alias ll="ls -hl --full-time --color=auto"' >> /root/.bashrc

# 设置工作目录
WORKDIR /opt/app/SpringBootUndertow

# 声明容器运行时监听的特定网络端口
EXPOSE 8090

# 指定容器创建时的默认命令
CMD ["java", "-jar", "/opt/app/SpringBootUndertow/SpringBootUndertow.jar"]
