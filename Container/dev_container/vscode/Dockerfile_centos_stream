# 构建CentOS Stream 9开发环境
# 使用VSCode编辑器SSH远程开发

# 基础镜像-CentOS Stream 9
FROM quay.io/centos/centos:stream9

# [参数传递]
# 宿主机的用户和组
ARG ARG_USER_ID=1000
ARG ARG_USER_NAME="centos_vscode_usr"
ARG ARG_USER_PWD="123456"
ARG ARG_GROUP_ID=1000
ARG ARG_GROUP_NAME="centos_vscode_grp"
# Github下载地址
ARG ARG_GITHUB_URL="https://bgithub.xyz"
ARG ARG_CONTAINER_NAME="centos_vscode"

# 在nvim中判断用
ENV DOCKER_CONTAINER="true"
ENV DOCKER_CONTAINER_NAME=$ARG_CONTAINER_NAME
ENV DOCKER_CONTAINER_USER=$ARG_USER_NAME
ENV DOCKER_CONTAINER_GROUP=$ARG_GROUP_NAME
# Github下载地址
ENV GITHUB_URL="https://bgithub.xyz"
ENV GITHUB_CONFIG_URL=$ARG_GITHUB_URL
RUN echo "Dev User/Group ID is : ${ARG_USER_ID}/${ARG_GROUP_ID}" && \
    echo "Dev User/Group NAME is : ${ARG_USER_NAME}/${ARG_GROUP_NAME}" && \
    echo "Github URL is : ${GITHUB_URL}" && \
    echo "Github Config URL is : ${GITHUB_CONFIG_URL}"

# 设定 CentOS Stream 9 镜像仓库为国内源
RUN mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup && \
    mv /etc/yum.repos.d/centos-addons.repo /etc/yum.repos.d/centos-addons.repo.backup

####################################################################################################
####################################################################################################
####################################################################################################

RUN echo $'[baseos]\n\
name=CentOS Stream $releasever - BaseOS\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/BaseOS/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=1\n\
\n\
[baseos-debuginfo]\n\
name=CentOS Stream $releasever - BaseOS - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/BaseOS/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[baseos-source]\n\
name=CentOS Stream $releasever - BaseOS - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/BaseOS/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-baseos-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[appstream]\n\
name=CentOS Stream $releasever - AppStream\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/AppStream/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=1\n\
\n\
[appstream-debuginfo]\n\
name=CentOS Stream $releasever - AppStream - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/AppStream/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[appstream-source]\n\
name=CentOS Stream $releasever - AppStream - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/AppStream/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-appstream-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[crb]\n\
name=CentOS Stream $releasever - CRB\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/CRB/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-crb-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=1\n\
\n\
[crb-debuginfo]\n\
name=CentOS Stream $releasever - CRB - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/CRB/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-crb-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[crb-source]\n\
name=CentOS Stream $releasever - CRB - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/CRB/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-crb-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0' > /etc/yum.repos.d/centos.repo

####################################################################################################
####################################################################################################
####################################################################################################

RUN echo $'[highavailability]\n\
name=CentOS Stream $releasever - HighAvailability\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/HighAvailability/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-highavailability-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=0\n\
\n\
[highavailability-debuginfo]\n\
name=CentOS Stream $releasever - HighAvailability - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/HighAvailability/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-highavailability-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[highavailability-source]\n\
name=CentOS Stream $releasever - HighAvailability - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/HighAvailability/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-highavailability-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[nfv]\n\
name=CentOS Stream $releasever - NFV\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/NFV/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-nfv-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=0\n\
\n\
[nfv-debuginfo]\n\
name=CentOS Stream $releasever - NFV - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/NFV/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-nfv-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[nfv-source]\n\
name=CentOS Stream $releasever - NFV - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/NFV/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-nfv-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[rt]\n\
name=CentOS Stream $releasever - RT\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/RT/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-rt-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=0\n\
\n\
[rt-debuginfo]\n\
name=CentOS Stream $releasever - RT - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/RT/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-rt-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[rt-source]\n\
name=CentOS Stream $releasever - RT - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/RT/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-rt-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[resilientstorage]\n\
name=CentOS Stream $releasever - ResilientStorage\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/ResilientStorage/$basearch/os\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-resilientstorage-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=0\n\
\n\
[resilientstorage-debuginfo]\n\
name=CentOS Stream $releasever - ResilientStorage - Debug\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/ResilientStorage/$basearch/debug/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-resilientstorage-debug-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[resilientstorage-source]\n\
name=CentOS Stream $releasever - ResilientStorage - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/$releasever-stream/ResilientStorage/source/tree/\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-resilientstorage-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0\n\
\n\
[extras-common]\n\
name=CentOS Stream $releasever - Extras packages\n\
baseurl=https://mirrors.aliyun.com/centos-stream/SIGs/$releasever-stream/extras/$basearch/extras-common\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-extras-sig-extras-common-$stream&arch=$basearch&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Extras-SHA512\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
countme=1\n\
enabled=1\n\
\n\
[extras-common-source]\n\
name=CentOS Stream $releasever - Extras packages - Source\n\
baseurl=https://mirrors.aliyun.com/centos-stream/SIGs/$releasever-stream/extras/source/extras-common\n\
# metalink=https://mirrors.centos.org/metalink?repo=centos-extras-sig-extras-common-source-$stream&arch=source&protocol=https,http\n\
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-Extras-SHA512\n\
gpgcheck=1\n\
repo_gpgcheck=0\n\
metadata_expire=6h\n\
enabled=0' > /etc/yum.repos.d/centos-addons.repo

####################################################################################################
####################################################################################################
####################################################################################################

# 创建应用路径
RUN mkdir /workspace
# 设置工作目录
WORKDIR /workspace

# 创建开发用户（避免数据卷为权限为root）
RUN groupadd -r -g ${ARG_GROUP_ID} ${DOCKER_CONTAINER_GROUP} && \
    useradd -r -g ${DOCKER_CONTAINER_GROUP} -u ${ARG_USER_ID} -s /bin/bash -m ${DOCKER_CONTAINER_USER}
# 设定用户密码
RUN echo "${DOCKER_CONTAINER_USER}:${ARG_USER_PWD}" | chpasswd

# 更新缓存
RUN dnf clean all && \
    dnf makecache && \
    dnf update && \
# 安装 所需内容
    dnf install -y epel-release && \
    dnf install -y which sudo git-all zip unzip xclip ripgrep fd-find dpkg gcc gcc-c++ make openssh-server
# RUN dnf group install "Development Tools"

# 安装 protoc
RUN curl -Lo protoc-29.0-linux-x86_64.zip "${GITHUB_URL}/protocolbuffers/protobuf/releases/download/v29.0/protoc-29.0-linux-x86_64.zip"
RUN unzip protoc-29.0-linux-x86_64.zip -d protoc
RUN mv protoc /usr/local/protoc
RUN rm -f protoc-29.0-linux-x86_64.zip
RUN ln -s /usr/local/protoc/bin/protoc /usr/bin/protoc

# 安装 gosu
# gosu 是经常出现在官方Docker镜像中的一个小工具。它是"su"和"sudo"命令的轻量级替代品，并解决了它们在tty和信号传递中的一些问题
RUN curl -sSL -o /usr/local/bin/gosu "${GITHUB_URL}/tianon/gosu/releases/download/1.17/gosu-$(dpkg --print-architecture | awk -F- '{ print $NF }')"
RUN chmod +x /usr/local/bin/gosu

# 将用户添加到 sudo 组以便可以运行 sudo 命令（默认情况下 CentOS 使用 wheel 组来管理 sudo 权限）
RUN usermod -aG wheel ${DOCKER_CONTAINER_USER}

# 配置 SSH 服务器
RUN sed -i 's/#Port 22/Port 22/g' /etc/ssh/sshd_config && \
    sed -i 's/#ListenAddress 0.0.0.0/ListenAddress 0.0.0.0/g' /etc/ssh/sshd_config && \
    sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/g' /etc/ssh/sshd_config && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config

# 生成 SSH 主机密钥
RUN mkdir /var/run/sshd && \
    ssh-keygen -A

# 修改权限
RUN chown -R $DOCKER_CONTAINER_USER:$DOCKER_CONTAINER_GROUP /workspace

# 切换用户
USER ${DOCKER_CONTAINER_USER}

# git设定
RUN git config --global user.name "yourname" && \
    git config --global user.email "your@email.com" && \
    git config --global gui.encoding utf-8 && \
    git config --global color.ui true && \
    git config --global core.autoCRLF false && \
    git config --global core.ignorecase false && \
    git config --global core.sparseCheckout true && \
    git config --global credential.helper store

WORKDIR /workspace

# 个人习惯定制化
RUN echo $'\n\
export DOCKER_CONTAINER_NAME=centos_vscode\n\
PS_GREEN="\[\033[0;32m\]"\n\
PS_YELLOW="\[\033[0;33m\]"\n\
PS_BLUE="\[\033[0;34m\]"\n\
PS_MAGENTA="\[\033[0;35m\]"\n\
PS_CLEAR="\[\033[0m\]"\n\
export PS1="${PS_GREEN}[${DOCKER_CONTAINER_NAME}]${PS_MAGENTA}\u@\h${PS_CLEAR}:${PS_YELLOW}\w${PS_CLEAR}\n${PS_BLUE}\$ ${PS_CLEAR}"\n\
alias ll="ls -hl --full-time --color=auto"\n\
alias lg="lazygit"\n\
alias vi="nvim"\n\
alias vim="nvim"\n\
' >> $HOME/.bashrc

# 切换用户
USER root

# 创建启动脚本
RUN echo $'#!/bin/bash\n\
# 启动 SSHD\n\
# /usr/sbin/sshd -D &\n\
# 使用gosu切换到开发用户
# exec gosu '"$DOCKER_CONTAINER_USER"' /bin/bash\n\
/usr/sbin/sshd -D\n\
' > /root/docker_start.sh

# 确保脚本具有可执行权限
RUN chmod +x /root/docker_start.sh

# 设置默认入口命令
ENTRYPOINT ["/root/docker_start.sh"]
