# 多阶段构建

# 阶段1：编译，命名为builder
# 使用Maven镜像
# 因为protoc-gen-grpc-java二进制文件在Linux上使用glibc，所以使用alpine有一些问题
# FROM maven:3.9.8-eclipse-temurin-21-alpine AS builder
FROM maven:3.9.8-eclipse-temurin-21-jammy AS builder

# 设定alpine镜像仓库为国内源
# RUN set -eux && sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories

# 创建应用路径
RUN mkdir /opt/app
# 创建Maven设定路径
RUN mkdir -p /root/.m2
RUN mkdir /root/.m2/repository

# 设定Java用环境变量
ENV JAVA_TOOL_OPTIONS="-Duser.language=en -Dfile.encoding=UTF-8 -Dgrpc.port=50051 -Dlog4j2.asyncQueueFullPolicy=Discard -Dlog4j2.discardThreshold=ERROR"

# 将本地文件复制到镜像中
# 复制src文件夹
COPY src /opt/app/JavaGppc/src
# 复制pom.xml文件
COPY pom.xml /opt/app/JavaGppc/pom.xml
COPY pom_docker.xml /opt/app/JavaGppc/pom_docker.xml
# 复制Maven国内源设定
COPY ./shell/settings.xml /root/.m2/settings.xml

# 设置工作目录
WORKDIR /opt/app/JavaGppc

# 编译工程
RUN mvn -f pom_docker.xml clean compile assembly:single -P docker -Dmaven.test.skip=true

#---------------------------------------------------------------------

# 阶段2：运行
# 根据需要选择eclipse-temurin的基于alpine的jre环境
FROM eclipse-temurin:21.0.3_9-jre-alpine

# 设定alpine镜像仓库为国内源
RUN set -eux && sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories

# 创建应用路径
RUN mkdir /opt/app

# 添加bash，curl
RUN apk update --quiet
RUN apk add --no-cache --upgrade bash curl

# 从阶段1复制编译结果
COPY --from=builder /opt/app/JavaGppc/build/javagrpc-1.0.jar /opt/app/JavaGppc/javagrpc-1.0.jar

# 设定Java用环境变量
ENV JAVA_TOOL_OPTIONS="-Duser.language=en -Dfile.encoding=UTF-8 -Dgrpc.port=50051 -Dlog4j2.asyncQueueFullPolicy=Discard -Dlog4j2.discardThreshold=ERROR"

# 个人习惯定制化
RUN echo 'PS_GREEN="\[\033[0;32m\]"' >> /root/.bashrc
RUN echo 'PS_YELLOW="\[\033[0;33m\]"' >> /root/.bashrc
RUN echo 'PS_BLUE="\[\033[0;34m\]"' >> /root/.bashrc
RUN echo 'PS_MAGENTA="\[\033[0;35m\]"' >> /root/.bashrc
RUN echo 'PS_CLEAR="\[\033[0m\]"' >> /root/.bashrc
RUN echo 'export PS1="${PS_GREEN}[Container]${PS_MAGENTA}\u@\h${PS_CLEAR}:${PS_YELLOW}\w${PS_CLEAR}\n${PS_BLUE}\$ ${PS_CLEAR}"' >> /root/.bashrc
RUN echo 'alias ll="ls -hl --full-time --color=auto"' >> /root/.bashrc

# 设置工作目录
WORKDIR /opt/app/JavaGppc

# 声明容器运行时监听的特定网络端口
EXPOSE 50051

# 指定容器创建时的默认命令
CMD ["java", "-jar", "/opt/app/JavaGppc/javagrpc-1.0.jar"]
