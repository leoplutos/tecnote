<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>my.mavenusegrpc</groupId>
	<artifactId>javagrpc</artifactId>
	<packaging>jar</packaging>
	<version>1.0</version>
	<name>javagrpc</name>
	<url>http://maven.apache.org</url>
	<properties>
		<!-- required for JDK 8 - 21 -->
		<java.version>21</java.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>
	<profiles>
		<profile>
			<!-- 本地开发环境 -->
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
				<!--dev环境使用默认的target-->
				<profiles.buildDirectory>target</profiles.buildDirectory>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<!-- 测试环境 -->
			<id>it</id>
			<properties>
				<profiles.active>it</profiles.active>
				<!--修改编译结果路径为build-->
				<profiles.buildDirectory>build</profiles.buildDirectory>
			</properties>
		</profile>
		<profile>
			<!-- 商用环境 -->
			<id>prd</id>
			<properties>
				<profiles.active>prd</profiles.active>
				<!--修改编译结果路径为build-->
				<profiles.buildDirectory>build</profiles.buildDirectory>
			</properties>
		</profile>
		<profile>
			<!-- Docker用 -->
			<id>docker</id>
			<properties>
				<profiles.active>docker</profiles.active>
				<!--修改编译结果路径为build-->
				<profiles.buildDirectory>build</profiles.buildDirectory>
			</properties>
		</profile>
	</profiles>
	<build>
		<!--生成路径根据profile的设定变化-->
		<directory>${project.basedir}/${profiles.buildDirectory}</directory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- 资源根目录排除各环境的配置，防止在生成目录中多余其它目录 -->
				<excludes>
					<exclude>dev/*</exclude>
					<exclude>it/*</exclude>
					<exclude>prd/*</exclude>
					<exclude>docker/*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources/${profiles.active}</directory>
			</resource>
		</resources>
		<!-- gRPC自动生成存根插件 -->
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.7.1</version>
			</extension>
		</extensions>
		<plugins>
			<!-- gRPC自动生成存根插件 -->
			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>0.6.1</version>
				<configuration>
					<protocArtifact>com.google.protobuf:protoc:3.25.1:exe:${os.detected.classifier}</protocArtifact>
					<outputDirectory>${basedir}/src/main/java</outputDirectory>
					<clearOutputDirectory>false</clearOutputDirectory>
					<pluginId>grpc-java</pluginId>
					<pluginArtifact>io.grpc:protoc-gen-grpc-java:1.64.0:exe:${os.detected.classifier}</pluginArtifact>
					<outputDirectory>${basedir}/src/main/java</outputDirectory>
					<clearOutputDirectory>false</clearOutputDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>compile-custom</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!--捆绑grpc jars-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.7.1</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<archive>
						<manifest>
							<mainClass>javagrpc.main.ServerMain</mainClass>
						</manifest>
						<manifestEntries>
							<Multi-Release>true</Multi-Release>
						</manifestEntries>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<!-- gRPC依赖 -->
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.25.3</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-netty-shaded</artifactId>
			<version>1.64.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-protobuf</artifactId>
			<version>1.64.0</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-stub</artifactId>
			<version>1.64.0</version>
		</dependency>
		<dependency>
			<groupId>io.grpc</groupId>
			<artifactId>grpc-services</artifactId>
			<version>1.64.0</version>
		</dependency>
		<dependency>
			<!-- necessary for Java 9+ -->
			<groupId>org.apache.tomcat</groupId>
			<artifactId>annotations-api</artifactId>
			<version>6.0.53</version>
			<scope>provided</scope>
		</dependency>
		<!-- log4j2依赖 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.23.1</version>
		</dependency>
		<!-- log4j2依赖 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.23.1</version>
		</dependency>
		<!-- log4j2和slf4j桥接依赖-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.23.1</version>
		</dependency>
		<!-- jetcd依赖 -->
		<dependency>
			<groupId>io.etcd</groupId>
			<artifactId>jetcd-core</artifactId>
			<version>0.8.3</version>
		</dependency>
		<!-- Apache Commons Config依赖 -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-configuration2</artifactId>
			<version>2.11.0</version>
		</dependency>
		<!-- OpenTelemetry监测依赖 opentelemetry-javaagent给启动程序命令行用，opentelemetry-grpc-1.6为程序用-->
		<dependency>
			<groupId>io.opentelemetry.javaagent</groupId>
			<artifactId>opentelemetry-javaagent</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-grpc-1.6</artifactId>
			<version>2.3.0-alpha</version>
		</dependency>
	</dependencies>
</project>
