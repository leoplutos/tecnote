# .bashrc for personal

# Source global definitions
#if [ -f ~/.bash_profile ]; then
#	. ~/.bash_profile
#fi

#if [ -f ~/.bashrc ]; then
#	. ~/.bashrc
#fi

# 提示符设定

# 普通版本
#设定UBUNTU_ICON=NerdFont的Ubuntu图标，最后面加了一个无法看见的空格（No-Break SpaceU+00A0）占位，实际命令：echo {f31b}{U+00A0}
#UBUNTU_ICON=`echo  `
#PS_IP=$(hostname -I | awk '{print$1}')
#PS_IP=`echo ${PS_IP}`
#PS_RED="\[\033[0;31m\]"
#PS_LIGHT_RED="\[\033[1;31m\]"
#PS_GREEN="\[\033[0;32m\]"
#PS_YELLOW="\[\033[0;33m\]"
#PS_BLUE="\[\033[0;34m\]"
#PS_MAGENTA="\[\033[0;35m\]"
#PS_CYAN="\[\033[0;36m\]"
#PS_CLEAR="\[\033[0m\]"
#export PS1="${PS_YELLOW}${UBUNTU_ICON}[bash]${PS_GREEN}[${PS_IP}]${PS_MAGENTA}\u@\h${PS_CLEAR}:${PS_YELLOW}\w${PS_CLEAR}\n${PS_BLUE}\$ ${PS_CLEAR}"

# 设定命令 提示符
PROMPT_COMMAND=__prompt_command_nerdfont
# 普通版本
__prompt_command() {
    local STR_EXIT_STATUS="$?"
    PS1=""
    local STR_UBUNTU_ICON=''
    local STR_IP=$(hostname -I | awk '{print$1}')
    local PS_BLACK='\[\e[0;30m\]'
    local PS_RED='\[\e[0;31m\]'
    local PS_LIGHT_RED='\[\e[1;31m\]'
    local PS_GREEN='\[\e[0;32m\]'
    local PS_YELLOW='\[\e[0;33m\]'
    local PS_BLUE='\[\e[0;34m\]'
    local PS_MAGENTA='\[\e[0;35m\]'
    local PS_CYAN='\[\e[0;36m\]'
    local PS_CLEAR='\[\e[0m\]'
    if [ $STR_EXIT_STATUS != 0 ]; then
        PS1+="${PS_LIGHT_RED}[${STR_EXIT_STATUS}] "
    else
        PS1+=""
    fi
    PS1+="${PS_YELLOW}${STR_UBUNTU_ICON} [bash]${PS_GREEN}[${STR_IP}]${PS_MAGENTA}\u@\h${PS_CLEAR}:${PS_YELLOW}\w${PS_CLEAR}\n${PS_BLUE}\$ ${PS_CLEAR}"
    # 亮色用
    #PS1+="${PS_BLUE}${STR_UBUNTU_ICON} [bash]${PS_GREEN}[${STR_IP}]${PS_MAGENTA}\u@\h${PS_CLEAR}:${PS_BLACK}\w${PS_CLEAR}\n${PS_BLUE}\$ ${PS_CLEAR}"
}
# NerdFont版本
__prompt_command_nerdfont() {
    local STR_EXIT_STATUS="$?"
    PS1=""
    local STR_LINE1_PRE='╭'
    local STR_LINE2_PRE='╰'
    local STR_LEFT_SEMICIRCLE=''
    local STR_RIGHT_SEMICIRCLE=''
    local STR_LEFT_ARROW=''
    local STR_UBUNTU_ICON=''
    local STR_DOCKER_ICON='󰡨'
    local STR_ERROR_ICON=''
    local STR_TIME_ICON=''
    local STR_USER_ICON=''
    local STR_IP_ICON='󰩠'
    local STR_DIRECTORY_ICON=''
    local STR_IP=$(hostname -I | awk '{print$1}')
    local PS_BLACK='\[\e[0;30m\]'
    local PS_RED='\[\e[0;31m\]'
    local PS_GREEN='\[\e[0;32m\]'
    local PS_YELLOW='\[\e[0;33m\]'
    local PS_BLUE='\[\e[0;34m\]'
    local PS_MAGENTA='\[\e[0;35m\]'
    local PS_CYAN='\[\e[0;36m\]'
    local PS_BRIGHTBLACK='\[\e[0;90m\]'
    local PS_BRIGHTRED='\[\e[0;91m\]'
    local PS_BRIGHTGREEN='\[\e[0;92m\]'
    local PS_BRIGHTYELLOW='\[\e[0;93m\]'
    local PS_BRIGHTBLUE='\[\e[0;94m\]'
    local PS_BRIGHTMAGENTA='\[\e[0;95m\]'
    local PS_BRIGHTCYAN='\[\e[0;96m\]'
    local PS_CLEAR='\[\e[0m\]'
    local PS_TIME='\[\e[96;100m\]'
    local PS_SHELL='\[\e[90;43m\]'
    local PS_HOST='\[\e[37;44m\]'
    local PS_IPADDR='\[\e[90;106m\]'
    local PS_PATH='\[\e[33;100m\]'
    local PS_ERR_STATUS='\[\e[93;101m\]'
    PS1+="${PS_MAGENTA}${STR_LINE1_PRE}"
    if [ $STR_EXIT_STATUS != 0 ]; then
        PS1+="${PS_BRIGHTRED}${STR_LEFT_SEMICIRCLE}${PS_ERR_STATUS}${STR_ERROR_ICON} ${STR_EXIT_STATUS} "
    else
        PS1+="${PS_BRIGHTBLACK}${STR_LEFT_SEMICIRCLE}"
    fi
    PS1+="${PS_TIME}${STR_TIME_ICON} \t ${PS_SHELL} ${STR_UBUNTU_ICON} bash ${PS_HOST} ${STR_USER_ICON} \u@\h ${PS_IPADDR} ${STR_IP_ICON} ${STR_IP} ${PS_PATH} ${STR_DIRECTORY_ICON}  \w ${PS_BRIGHTBLACK}${STR_LEFT_ARROW}${PS_CLEAR}\n${PS_MAGENTA}${STR_LINE2_PRE}${PS_BLUE}\$ ${PS_CLEAR}"
}

#export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64/"
export JAVA_HOME="/usr/lib/jvm/java-21-openjdk-amd64"
export INPUTRC='~/work/lch/rc/inputrc/inputrc'
export personal_workspace=~/work/lch/workspace
export personal_rc=~/work/lch/rc
export personal_tmp=~/work/lch/tmp
export personal_tool=~/work/lch/tool
export personal_log=~/work/lch/log
export TERM="xterm-256color"
export COLORTERM=truecolor
#export DOCKER_HOST="tcp://localhost:3102"

#环境变量加入pip3下载的内容
export PATH=$PATH:~/.local/bin
#环境变量加入go
export GOROOT=/usr/local/go
export GOPATH=~/work/lch/tool/go_global
export GO111MODULE=on
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
export KOTLIN_HOME=/usr/local/kotlin/kotlinc
export PATH=$PATH:$KOTLIN_HOME/bin
#export PATH=$PATH:'/home/lchuser/work/lch/tool/lsp/kotlin-language-server/bin'

alias ll='ls -hl --full-time --time-style=long-iso --color=auto'
alias lla='ls -hal --full-time --time-style=long-iso --color=auto'
alias llt='ls -htl --full-time --time-style=long-iso --color=auto'
alias cdw='cd $personal_workspace'
alias cdr='cd $personal_rc'
alias cdt='cd $personal_tmp'
alias cdto='cd $personal_tool'
alias cdl='cd $personal_log'
# alias vim='vim -u ~/work/lch/rc/vimrc/.vimrc'
#因为alias无法传递参数，所以用定义函数，然后调用函数的方式，导入参数
# alias vimf='func_vimf() { vim -u ~/work/lch/rc/vimrc/.vimrc $1 --cmd "let g:g_use_lsp = 1 | let g:g_use_dap = 1"; }; func_vimf'
# alias vimc='func_vimc() { vim -u ~/work/lch/rc/vimrc/.vimrc $1 --cmd "let g:g_use_lsp = 1 | let g:g_use_dap = 1 | let g:g_lsp_type = 3"; }; func_vimc'
# alias vimv='func_vimv() { vim -u ~/work/lch/rc/vimrc/.vimrc $1 --cmd "let g:g_use_lsp = 1 | let g:g_use_dap = 1 | let g:g_front_dev_type = 1"; }; func_vimv'
# alias nvim='env TERM=wezterm nvim -u ~/work/lch/rc/nvimrc/init.lua'
# alias nvimf='func_nvimf() { env TERM=wezterm nvim -u ~/work/lch/rc/nvimrc/init.lua $1 --cmd "let g:g_use_lsp = 1 | let g:g_use_dap = 1"; }; func_nvimf'
# alias nvimc='func_nvimc() { env TERM=wezterm nvim -u ~/work/lch/rc/nvimrc/init.lua $1 --cmd "let g:g_use_lsp = 1 | let g:g_use_dap = 1 | let g:g_lsp_type = 3"; }; func_nvimc'
# alias nvimv='func_nvimv() { env TERM=wezterm nvim -u ~/work/lch/rc/nvimrc/init.lua $1 --cmd "let g:g_use_lsp = 1 | let g:g_use_dap = 1 | let g:g_front_dev_type = 1"; }; func_nvimv'
alias vi='vim'
alias vim='nvim'
alias lg='lazygit'
alias gu='gitui'
alias dk='docker'
alias dki='docker images'
alias dkc='docker ps -a'
alias dkl='docker logs -ft --tail ?'
alias dke='func_docker_exec() { docker exec -it $1 /bin/bash; }; func_docker_exec'
alias dkr='docker run -it --entrypoint /bin/bash'
alias dka='docker attach'
alias dc='docker compose'
alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock lazyteam/lazydocker:latest'
alias dcc='docker compose ps -a'
alias dcu='docker compose up -d'
alias dcd='docker compose down'
alias dcl='docker compose logs'
alias gdbx='gdb -x ~/work/lch/rc/gdbrc/.gdbinit'
alias tmuxn='tmux -2u -f ~/work/lch/rc/tmuxrc/tmux3.2.conf new-session -s lch_session -n lch_window'
alias tmuxa='tmux -2u a -t lch_session'

alias clearb='echo -e "\ec\e[3J"'
